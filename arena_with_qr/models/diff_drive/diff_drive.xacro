<?xml version="1.0"?>

<!-- choose a name space and start xacro -->
<robot name="ddrbot" xmlns:xacro="http://wwww.ros.org/wiki/xacro">

 <!-- Start by including all the required xacro files which hold the macros -->
 <xacro:include filename="$(find arena_with_qr)/models/diff_drive/diff_drive.gazebo" />
 <xacro:include filename="$(find arena_with_qr)/models/diff_drive/materials.xacro" />
 <xacro:include filename="$(find arena_with_qr)/models/diff_drive/macros.xacro" />
 <xacro:include filename="$(find arena_with_qr)/models/diff_drive/parameter.xacro" />

 <!-- Create a dummy link as a base link -->
  <link name='base_link'>
 
  </link>
  <joint type="fixed" name="base_link_to_chassis">
    <child link="chassis_link"/>
    <parent link="base_link"/>
  </joint>

 <!-- Define the chassis of  the differential drive robot, which is our base -->
 <link name='chassis_link'>
    <pose>0 0 0 0 0 0</pose>
    <!-- Define inertial system for the chassis -->
    <inertial>   
      <mass value="${m_chassis}"/>
      <xacro:box_inertia m="${m_chassis}" x="${x_chassis}" y="${y_chassis}" z="${z_chassis}"/>
    </inertial>
    <!-- Define collision surrounding box -->
    <collision name='collision'>>
      <origin xyz="0 ${r_wheel/2} 0" rpy="0 0 0"/>
      <geometry>
       <box size="${x_chassis} ${y_chassis} ${z_chassis}"/>
      </geometry>
    </collision>
    <!-- Define visualization structure -->
    <visual name='base_link_visual'>
	    <origin xyz="0 0 0" rpy="0 0 0"/>
	    <geometry>
         <box size="${x_chassis} ${y_chassis} ${z_chassis}"/>
      </geometry>
    </visual>

    <!-- Add the castor wheel! Here we simply assume complete slippage, thus we do not require that it rotates! -->
    <collision name='caster_collision'>
      <origin xyz="${-(r_wheel/2)+x_chassis/2} 0 ${-z_chassis+cr_wheel}" rpy="0 0 0"/>
      <geometry>
       <sphere radius="${cr_wheel}"/>
      </geometry>
      <surface>
       <friction>
        <ode>
         <mu>0</mu>
         <mu2>0</mu2>
         <slip1>1.0</slip1>
         <slip2>1.0</slip2>
        </ode>
       </friction>
      </surface>
    </collision>
    <visual name='caster_visual'>
	    <origin xyz="${-(r_wheel/2)+x_chassis/2} 0 ${-z_chassis+cr_wheel}" rpy="0 0 0"/>
    	<geometry>
        <sphere radius="${cr_wheel}"/>
      </geometry>
    </visual>
    <inertial>
      <origin xyz="${-(r_wheel/2)+x_chassis/2} 0 ${-z_chassis+cr_wheel}" rpy="0 0 0"/>
      <mass value="${cm_wheel}"/>
      <!-- <castor_inertia m="${cm_wheel}" r="${cr_wheel}" /> -->
      <xacro:castor_inertia m="${cm_wheel}" r="${cr_wheel}" />
    </inertial>
   <!-- Adding the left clamp -->
   <collision name='left_clamp_collision'>
      <origin xyz="${(x_left_clamp/2)+x_chassis/2} ${y_chassis/2+x_left_clamp/2-y_left_clamp/2} 0" rpy="0 0 0"/>
      <geometry>
       <box size="${x_left_clamp} ${y_left_clamp} ${z_left_clamp}"/>
      </geometry>
      <surface>
       <friction>
        <ode>
         <mu>0</mu>
         <mu2>0</mu2>
         <slip1>0</slip1>
         <slip2>0</slip2>
        </ode>
       </friction>
      </surface>
    </collision>
    <visual name='left_clamp_visual'>
	    <origin xyz="${(x_left_clamp/2)+x_chassis/2} ${y_chassis/2+x_left_clamp/2-y_left_clamp/2} 0" rpy="0 0 0"/>
    	<geometry>
        <box size="${x_left_clamp} ${y_left_clamp} ${z_left_clamp}"/>
      </geometry>
    </visual>
    <inertial>   
      <mass value="${m_left_clamp}"/>
      <xacro:box_inertia m="${m_left_clamp}" x="${x_left_clamp}" y="${y_left_clamp}" z="${z_left_clamp}"/>
    </inertial>


   <!-- Adding the right clamp -->
   <collision name='right_clamp_collision'>
      <origin xyz="${(x_left_clamp/2)+x_chassis/2} ${-(y_chassis/2)-x_right_clamp/2+y_left_clamp/2} 0" rpy="0 0 0"/>
      <geometry>
       <box size="${x_right_clamp} ${y_right_clamp} ${z_right_clamp}"/>
      </geometry>
      <surface>
       <friction>
        <ode>
         <mu>0</mu>
         <mu2>0</mu2>
         <slip1>0</slip1>
         <slip2>0</slip2>
        </ode>
       </friction>
      </surface>
    </collision>
    <visual name='right_clamp_visual'>
	    <origin xyz="${(x_left_clamp/2)+x_chassis/2} ${-(y_chassis/2)-x_right_clamp/2+y_left_clamp/2} 0" rpy="0 0 0"/>
    	<geometry> 
        <box size="${x_right_clamp} ${y_right_clamp} ${z_right_clamp}"/>
      </geometry>
    </visual>
    <inertial>   
      <mass value="${m_right_clamp}"/>
      <xacro:box_inertia m="${m_right_clamp}" x="${x_right_clamp}" y="${y_right_clamp}" z="${z_right_clamp}"/>
    </inertial>

   <!-- Adding the bottom left clamp -->
   <collision name='bot_left_clamp_collision'>
      <origin xyz="${x_chassis/2-y_left_clamp/2} ${y_chassis/2+x_left_clamp/4} 0" rpy="0 0 1.570896"/>
      <geometry>
       <box size="${x_left_clamp/2} ${y_left_clamp} ${z_left_clamp}"/>
      </geometry>
      <surface>
       <friction>
        <ode>
         <mu>0</mu>
         <mu2>0</mu2>
         <slip1>0</slip1>
         <slip2>0</slip2>
        </ode>
       </friction>
      </surface>
    </collision>
    <visual name='bot_left_clamp_visual'>
	    <origin xyz="${x_chassis/2-y_left_clamp/2} ${y_chassis/2+x_left_clamp/4} 0" rpy="0 0 1.570896"/>
    	<geometry>
        <box size="${x_left_clamp/2} ${y_left_clamp} ${z_left_clamp}"/>
      </geometry>
    </visual>
    <inertial>   
      <mass value="${m_left_clamp}"/>
      <xacro:box_inertia m="${m_left_clamp}" x="${x_left_clamp}" y="${y_left_clamp}" z="${z_left_clamp}"/>
    </inertial>


   <!-- Adding the bottom right clamp -->
   <collision name='bot_right_clamp_collision'>
      <origin xyz="${x_chassis/2-y_right_clamp/2} ${-(y_chassis/2)-x_right_clamp/4} 0" rpy="0 0 -1.570896"/>
      <geometry>
       <box size="${x_right_clamp/2} ${y_right_clamp} ${z_right_clamp}"/>
      </geometry>
      <surface>
       <friction>
        <ode>
         <mu>0</mu>
         <mu2>0</mu2>
         <slip1>0</slip1>
         <slip2>0</slip2>
        </ode>
       </friction>
      </surface>
    </collision>
    <visual name='bot_right_clamp_visual'>
	    <origin xyz="${x_chassis/2-y_right_clamp/2} ${-(y_chassis/2)-x_right_clamp/4} 0" rpy="0 0 -1.570896"/>
    	<geometry> 
        <box size="${x_right_clamp/2} ${y_right_clamp} ${z_right_clamp}"/>
      </geometry>
    </visual>
    <inertial>   
      <mass value="${m_right_clamp}"/>
      <xacro:box_inertia m="${m_right_clamp}" x="${x_right_clamp}" y="${y_right_clamp}" z="${z_right_clamp}"/>
    </inertial>

    
  </link>


  <!-- Add the wheels for the robot -->
  <link name="left_wheel">
    <collision name="lcollision">
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <geometry>
       <cylinder radius="${r_wheel}" length="${h_wheel}"/>
      </geometry>
      <surface>
       <friction>
        <ode>
         <mu>0.5</mu>
         <mu2>0.5</mu2>
         <slip1>0.0</slip1>
         <slip2>0.0</slip2>
        </ode>
       </friction>
      </surface>
    </collision>
    <visual name='left_wheel_visual'>
	    <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
    	<geometry>
        <cylinder radius="${r_wheel}" length="${h_wheel}"/>
      </geometry>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <mass value="${m_wheel}"/>
      <!-- <cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/> -->
      <xacro:cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/>
    </inertial>
  </link>

  <link name="right_wheel">
    <collision name="rcollision">
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <geometry>
       <cylinder radius="${r_wheel}" length="${h_wheel}"/>
      </geometry>
      <surface>
       <friction>
        <ode>
         <mu>0.5</mu>
         <mu2>0.5</mu2>
         <slip1>0.0</slip1>
         <slip2>0.0</slip2>
        </ode>
       </friction>
      </surface>
    </collision>
    <visual name="right_wheel_visual">
	    <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
    	<geometry>
        <cylinder radius="${r_wheel}" length="${h_wheel}"/>
      </geometry>
    </visual>
    <inertial>
      <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
      <mass value="${m_wheel}"/>
      <!-- <cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/> -->
      <xacro:cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/>
    </inertial>
  </link>

  <!-- Set joints for the wheels which can be controlled over ROS -->
  <joint type="continuous" name="left_wheel_hinge">
    <origin xyz="${-x_chassis/4} ${y_chassis/2+h_wheel/2} ${r_wheel/2-z_chassis/2}" rpy="0 0 0"/>
    <child link="left_wheel"/>
    <parent link="base_link"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>
  <joint type="continuous" name="right_wheel_hinge">
    <origin xyz="${-x_chassis/4} ${-y_chassis/2-h_wheel/2} ${r_wheel/2-z_chassis/2}" rpy="0 0 0"/>
    <child link="right_wheel"/>
    <parent link="base_link"/>
    <axis xyz="0 1 0" rpy="0 0 0"/>
    <limit effort="100" velocity="100"/>
    <joint_properties damping="1.0" friction="1.0"/>
  </joint>

  <joint name="camera_joint1" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="${x_chassis/2} 0 ${z_chassis/4}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="camera_link1"/>
  </joint>


  <joint name="laser_joint1" type="fixed">
    <axis xyz="1 0 0" />
    <origin xyz="${x_chassis/4} ${y_chassis/2+laser_link*15} ${r_wheel/2-z_chassis/2}" rpy="0 0 1.570896"/>
    <parent link="base_link"/>
    <child link="laser_link1"/>
  </joint>


  <joint name="laser_joint6" type="fixed">
    <axis xyz="1 0 0" />
    <origin xyz="${x_chassis/4} ${-y_chassis/2-laser_link*15} ${r_wheel/2-z_chassis/2}" rpy="0 0 -1.570896"/>
    <parent link="base_link"/>
    <child link="laser_link6"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link1">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${camera_link} ${camera_link} ${camera_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="0.2" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>


  <!-- Lasers -->

  <link name="laser_link1">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${laser_link} ${laser_link} ${laser_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${laser_link} ${laser_link} ${laser_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="0.15" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>



  <link name="laser_link6">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${laser_link} ${laser_link} ${laser_link}"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
    <box size="${laser_link} ${laser_link} ${laser_link}"/>
      </geometry>
      <material name="red"/>
    </visual>

    <inertial>
      <mass value="0.15" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  

</robot>

